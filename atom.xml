<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chuang1230 &#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-28T11:41:40.267Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>chuang1230</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VPS</title>
    <link href="http://yoursite.com/2019/04/16/ssr/"/>
    <id>http://yoursite.com/2019/04/16/ssr/</id>
    <published>2019-04-15T16:00:00.000Z</published>
    <updated>2019-04-28T11:41:40.267Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2019/04/16/ssr/1.jpg" alt="我超凶的"></p><h2 id="vultr服务器"><a href="#vultr服务器" class="headerlink" title="vultr服务器"></a>vultr服务器</h2><p>点击 <a href="https://www.vultr.com/" target="_blank" rel="noopener">https://www.vultr.com/</a>  进入官网注册。<br><a id="more"></a></p><p>首先需要充值一定的钱，建议先冲$10【换算成rmb大概60多元】就可试一试【支持支付宝和微信支付】<br>。</p><p><img src="/2019/04/16/ssr/vultr-3.png" alt=""></p><p>选择服务器所在区域，自己决定，不喜欢的话后面可以重新实例。</p><p><img src="/2019/04/16/ssr/vultr-1.png" alt=""></p><p>选择系统，建议选择cenlos 6*64【网上大神说的】，买$5元一个月就够了。其他都是默认就好，直接生产，需要1几分钟加载。</p><p><img src="/2019/04/16/ssr/vultr-2.png" alt=""></p><p>加载完成后就会有如下界面</p><p><img src="/2019/04/16/ssr/vultr-4.png" alt=""></p><p>点击图中的小齿轮，进去后要服务器的详细信息。</p><h2 id="vps的部署"><a href="#vps的部署" class="headerlink" title="vps的部署"></a>vps的部署</h2><h3 id="wget的安装"><a href="#wget的安装" class="headerlink" title="wget的安装"></a>wget的安装</h3><p>如果已经安装，则跳过此步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure></p><h3 id="ssr的安装与配置"><a href="#ssr的安装与配置" class="headerlink" title="ssr的安装与配置"></a>ssr的安装与配置</h3><h4 id="命令行的安装"><a href="#命令行的安装" class="headerlink" title="命令行的安装"></a>命令行的安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>出现下图管理界面，输入1选择安装ssr</p><p><img src="/2019/04/16/ssr/ssr-1.png" alt=""></p><p>之后会弹出端口和密码的设置，自行设置【这里无图演示，嘻嘻嘻】</p><p>加密方式选择aes-256-cfb</p><p><img src="/2019/04/16/ssr/ssr-2.png" alt=""></p><p>协议插件选择auth_sha1_v4</p><p><img src="/2019/04/16/ssr/ssr-3.png" alt=""></p><p>混淆插件选择tlsl.2_ticket_auth</p><p><img src="/2019/04/16/ssr/ssr-4.png" alt=""></p><p>设备数限制，端口限速等自己设置，不设置也可以，反正自己用，直接回车设置默认值</p><p><img src="/2019/04/16/ssr/ssr-5.png" alt=""></p><p>之后就选择YES就开始正式部署，完成可以看到你的VPS所有信息</p><p>若要修改账号信息,直接输入快捷管理命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ssr.sh</span><br></pre></td></tr></table></figure></p><h2 id="谷歌BBR加速"><a href="#谷歌BBR加速" class="headerlink" title="谷歌BBR加速"></a>谷歌BBR加速</h2><p>vultr的服务器是KVM框架，谷歌的BBR支持</p><p>brr的安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure></p><p>然后会弹出任意键后继续，弹出是否重启，确认就好，如果无法重启，请手动重启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure></p><h2 id="客户端的安装"><a href="#客户端的安装" class="headerlink" title="客户端的安装"></a>客户端的安装</h2><p>自行到如下github网站的releases找到对应版本安装；ios和mac版的需要自行去github上找，一定有大神有的！</p><h3 id="ssr-windows"><a href="#ssr-windows" class="headerlink" title="ssr-windows"></a>ssr-windows</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shadowsocksrr/shadowsocksr-csharp</span><br></pre></td></tr></table></figure><h3 id="ssr-android"><a href="#ssr-android" class="headerlink" title="ssr-android"></a>ssr-android</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/shadowsocksrr/shadowsocksr-android</span><br></pre></td></tr></table></figure><h3 id="v2ray【本人使用】"><a href="#v2ray【本人使用】" class="headerlink" title="v2ray【本人使用】"></a>v2ray【本人使用】</h3><p>注意V2ray支持VMess和Shadowsocks协议的，所以ssr也可以在v2ray中使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.v2ray.com/</span><br></pre></td></tr></table></figure></p><p>可能需要翻墙才访问这个网站，如若想要直接下载，参考下图的地址即可</p><p><img src="/2019/04/16/ssr/v2ray-1.png" alt=""></p><h2 id="客户端的配置"><a href="#客户端的配置" class="headerlink" title="客户端的配置"></a>客户端的配置</h2><p>1.打开客户端</p><p>2.复制ssr的链接直接导入即可，或者扫码导入</p><p>3.设置为PAC 自动代理（推荐），不需要浏览器插件就可以分网站使用代理</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2019/04/16/ssr/1.jpg&quot; alt=&quot;我超凶的&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;vultr服务器&quot;&gt;&lt;a href=&quot;#vultr服务器&quot; class=&quot;headerlink&quot; title=&quot;vultr服务器&quot;&gt;&lt;/a&gt;vultr服务器&lt;/h2&gt;&lt;p&gt;点击 &lt;a href=&quot;https://www.vultr.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.vultr.com/&lt;/a&gt;  进入官网注册。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ssr" scheme="http://yoursite.com/tags/ssr/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu14.4下netease-cloud-music的安装与卸载</title>
    <link href="http://yoursite.com/2019/04/15/netease%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/04/15/netease的安装与卸载/</id>
    <published>2019-04-14T16:00:00.000Z</published>
    <updated>2019-04-28T11:42:22.009Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装包的下载"><a href="#安装包的下载" class="headerlink" title="安装包的下载"></a>安装包的下载</h2><p>重新打开浏览器，copy链接就可以自动下载安装包</p><p>Ubuntu 14.04 64<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s1.music.126.net/download/pc/netease-cloud-music_1.0.0_amd64_ubuntu14.04.deb</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>Ubuntu 14.04 32<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s1.music.126.net/download/pc/netease-cloud-music_1.0.0_i386_ubuntu14.04.deb</span><br></pre></td></tr></table></figure></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>先到下载目录下ls查看是否存在安装包，再使用安装命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i  netease-cloud-music_1.0.0_amd64_ubuntu14.04.deb</span><br></pre></td></tr></table></figure></p><h2 id="出现错误"><a href="#出现错误" class="headerlink" title="出现错误"></a>出现错误</h2><p>错误原因<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg: error processing package netease-cloud-music (--install):</span><br><span class="line"> dependency problems - leaving unconfigured</span><br></pre></td></tr></table></figure></p><p>配置依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure></p><p>重新安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i  netease-cloud-music_1.0.0_amd64_ubuntu14.04.deb</span><br></pre></td></tr></table></figure></p><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>查询软件包是否存在<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l | grep netease-cloud-music</span><br></pre></td></tr></table></figure></p><p>卸载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove netease-cloud-music</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装包的下载&quot;&gt;&lt;a href=&quot;#安装包的下载&quot; class=&quot;headerlink&quot; title=&quot;安装包的下载&quot;&gt;&lt;/a&gt;安装包的下载&lt;/h2&gt;&lt;p&gt;重新打开浏览器，copy链接就可以自动下载安装包&lt;/p&gt;
&lt;p&gt;Ubuntu 14.04 64&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;s1.music.126.net/download/pc/netease-cloud-music_1.0.0_amd64_ubuntu14.04.deb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>soundex算法的实现</title>
    <link href="http://yoursite.com/2019/04/10/soundex%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/04/10/soundex的Python实现/</id>
    <published>2019-04-09T16:00:00.000Z</published>
    <updated>2019-04-28T11:41:29.382Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="soundex算法"><a href="#soundex算法" class="headerlink" title="soundex算法"></a>soundex算法</h2><p>soundex是一种语音算法，利用英文字的读音计算近似值，值由四个字符构成，第一个字符为英文字母，后三个为数字。在拼音文字中有时会有会念但不能拼出正确字的情形，可用soundex做类似模糊匹配的效果。例如knuth和kant二个字符串，它们的soundex值都是“k530”。<br><a id="more"></a></p><h2 id="算法基本思路"><a href="#算法基本思路" class="headerlink" title="算法基本思路"></a>算法基本思路</h2><p>1.保留第一个字母，去掉第一个字母之后的所有的a, e, i, o, u, y, h, w；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">word=word.lower() #转换为小写</span><br><span class="line">word1=word[1:]    #获取第一个字母后的切片</span><br><span class="line">word1 = re.sub(&apos;[aeiouyhw]&apos;,&apos;&apos;,word1) #去除元音字母</span><br></pre></td></tr></table></figure><p>2.将英文字按以下规则替换（除第一个字符外）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b f p v -&gt; 1</span><br><span class="line">c g j k q s x z -&gt; 2</span><br><span class="line">d t -&gt; 3</span><br><span class="line">l -&gt; 4</span><br><span class="line">m n -&gt; 5</span><br><span class="line">r -&gt; 6</span><br></pre></td></tr></table></figure></p><p>3.对于相邻的重复的数字只保留一个，即相邻的两个被替换为同一个数字的字母只保留一个；</p><p>4.保留第一个字母后的三位数字，若不足三位则以0补足。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#去除重复</span><br><span class="line">for i in range(1,len(result)):</span><br><span class="line">  if i&lt;=3:</span><br><span class="line">    result1+=result[i]</span><br><span class="line">if len(result)-1&lt;3:</span><br><span class="line">  time=3-(len(result)-1)</span><br><span class="line">  #补0</span><br><span class="line">  for i in range(0,time):</span><br><span class="line">    result1+=&apos;0&apos;</span><br></pre></td></tr></table></figure></p><h2 id="Python的实现"><a href="#Python的实现" class="headerlink" title="Python的实现"></a>Python的实现</h2><p>完整代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">def soundex(word):</span><br><span class="line">    word=word.lower()</span><br><span class="line">    result=word[0]</span><br><span class="line">    word1=word[1:]</span><br><span class="line">    word1 = re.sub(&apos;[aeiouyhw]&apos;,&apos;&apos;,word1)</span><br><span class="line">    for char in word1:</span><br><span class="line">        if char==&apos;b&apos; or char==&apos;f&apos; or char==&apos;p&apos;or char==&apos;v&apos;:</span><br><span class="line">            result+=&apos;1&apos;</span><br><span class="line">        elif char==&apos;c&apos; or char==&apos;g&apos; or char==&apos;j&apos; or char==&apos;k&apos; or char==&apos;q&apos; or char==&apos;s&apos; or char==&apos;x&apos; or char==&apos;z&apos;:</span><br><span class="line">            result+=&apos;2&apos;</span><br><span class="line">        elif char==&apos;d&apos; or char==&apos;t&apos;:</span><br><span class="line">            result+=&apos;3&apos;</span><br><span class="line">        elif char==&apos;l&apos;:</span><br><span class="line">            result+=&apos;4&apos;</span><br><span class="line">        elif char==&apos;m&apos; or char==&apos;n&apos;:</span><br><span class="line">            result+=&apos;5&apos;</span><br><span class="line">        elif char==&apos;r&apos;:</span><br><span class="line">            result+=&apos;6&apos;</span><br><span class="line">    print(&apos;first_changed_without_control:&apos;,result)</span><br><span class="line">    result1=result[0]</span><br><span class="line">    for i in range(1,len(result)):</span><br><span class="line">        if i&lt;=3:</span><br><span class="line">            result1+=result[i]</span><br><span class="line">    if len(result)-1&lt;3:</span><br><span class="line">        time=3-(len(result)-1)</span><br><span class="line">        for i in range(0,time):</span><br><span class="line">            result1+=&apos;0&apos;</span><br><span class="line">    print(&apos;second_changed_with_control:  &apos;,result1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    #乱打的测试</span><br><span class="line">    soundex(&apos;kdsadasnh&apos;)</span><br><span class="line">    soundex(&apos;dsaddas&apos;)</span><br><span class="line">    #正常测试</span><br><span class="line">    soundex(&apos;Knuth&apos;)</span><br><span class="line">    soundex(&apos;Kant&apos;)</span><br><span class="line">    soundex(&apos;Jarovski&apos;)</span><br></pre></td></tr></table></figure></p><p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">first_changed_without_control: k32325</span><br><span class="line">second_changed_with_control:   k323</span><br><span class="line">first_changed_without_control: d2332</span><br><span class="line">second_changed_with_control:   d233</span><br><span class="line">first_changed_without_control: k53</span><br><span class="line">second_changed_with_control:   k530</span><br><span class="line">first_changed_without_control: k53</span><br><span class="line">second_changed_with_control:   k530</span><br><span class="line">first_changed_without_control: j6122</span><br><span class="line">second_changed_with_control:   j612</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;soundex算法&quot;&gt;&lt;a href=&quot;#soundex算法&quot; class=&quot;headerlink&quot; title=&quot;soundex算法&quot;&gt;&lt;/a&gt;soundex算法&lt;/h2&gt;&lt;p&gt;soundex是一种语音算法，利用英文字的读音计算近似值，值由四个字符构成，第一个字符为英文字母，后三个为数字。在拼音文字中有时会有会念但不能拼出正确字的情形，可用soundex做类似模糊匹配的效果。例如knuth和kant二个字符串，它们的soundex值都是“k530”。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>便捷存放</title>
    <link href="http://yoursite.com/2019/03/22/2019.3.22/"/>
    <id>http://yoursite.com/2019/03/22/2019.3.22/</id>
    <published>2019-03-22T07:09:44.000Z</published>
    <updated>2019-04-13T08:00:32.936Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【持续补充】<br>【不想带U盘，不想搞ftp，不想搞远程桌面】</p> <a id="more"></a><h2 id="截屏-录视频"><a href="#截屏-录视频" class="headerlink" title="截屏+录视频"></a>截屏+录视频</h2><p>实验室电脑都没有截屏，真的是麻烦!<br><a href="http://lc-JuJaBo3E.cn-n1.lcfile.com/c8166434c297f06bf43e.zip" target="_blank" rel="noopener">fscapture85.zip</a></p><h2 id="油猴实用脚本"><a href="#油猴实用脚本" class="headerlink" title="油猴实用脚本"></a>油猴实用脚本</h2><p><a href="http://lc-JuJaBo3E.cn-n1.lcfile.com/a8d9006ecefcda919abe.zip" target="_blank" rel="noopener">tampermokey</a></p><h2 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h2><p><a href="http://lc-JuJaBo3E.cn-n1.lcfile.com/fb1c80582428a9de5485.rar" target="_blank" rel="noopener">ocr</a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="http://lc-JuJaBo3E.cn-n1.lcfile.com/002b494276d275b02fd7.rar" target="_blank" rel="noopener">android</a><br><a href="http://lc-JuJaBo3E.cn-n1.lcfile.com/56ed13b97cb251a46f7a.zip" target="_blank" rel="noopener">window64</a><br><a href="http://lc-JuJaBo3E.cn-n1.lcfile.com/467d7208031ec613de0c.rar" target="_blank" rel="noopener">window_2</a></p><h2 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h2><p>1.<a href="https://www.processon.com/" target="_blank" rel="noopener">在线作图网站</a><br>2.<a href="https://www.bilibili.com/video/av41572620" target="_blank" rel="noopener">数据结构-清华大学邓俊辉</a><br>3.<a href="https://github.com/inferjay/AndroidDevTools#sdk-tools" target="_blank" rel="noopener">Android开发</a><br>4.<a href="http://www.ipol.im/" target="_blank" rel="noopener">图像处理周刊</a><br>5.<a href="https://github.com/CyC2018/CS-Notes" target="_blank" rel="noopener">基础知识</a><br>6.<a href="http://www.pythonchallenge.com/" target="_blank" rel="noopener">python挑战</a><br>  做网站上面的题目。如果卡在某一关太久, 可以看答案(google python challenge answer), 做完后看看别人的编码方式和自己有什么区别。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【持续补充】&lt;br&gt;【不想带U盘，不想搞ftp，不想搞远程桌面】&lt;/p&gt;
    
    </summary>
    
    
      <category term="tool" scheme="http://yoursite.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>在Hexo博客中添加音乐</title>
    <link href="http://yoursite.com/2019/02/22/2019.2.22/"/>
    <id>http://yoursite.com/2019/02/22/2019.2.22/</id>
    <published>2019-02-22T07:39:44.000Z</published>
    <updated>2019-04-13T08:00:36.727Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【痴迷音乐】</p><p><img src="/2019/02/22/2019.2.22/2019.2.22.jpg" alt="为我GEM疯狂打call"><br> <a id="more"></a></p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>直接到音乐网站中生成外链播放器，就有自动生成如下标签，直接放进md文件中即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe </span><br><span class="line">frameborder=<span class="string">"no"</span> </span><br><span class="line">border=<span class="string">"0"</span> </span><br><span class="line">marginwidth=<span class="string">"0"</span> </span><br><span class="line">marginheight=<span class="string">"0"</span> </span><br><span class="line">width=0 </span><br><span class="line">height=0 </span><br><span class="line">src=<span class="string">"http://streamoc.music.tc.qq.com/M800101A9o5D1EWzyd.mp3?vkey=496F425FDC1F092E0924D5ADD6BA7AA6837C8528BF0696B09AE2DC0FCB8B1CCDCFBFABB6C0EDC11B17B69138025492940BF54F6EA14B310A&amp;guid=MS&amp;fromtag=8&amp;uin=0"</span>&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>把width=和height设置为0，在网页中看不见,但可以自动播放，有点像网页背景音乐。<a href="https://chuang1230.github.io/2019/01/15/2019.1.15.2/#more" target="_blank" rel="noopener">点击此处查看具体效果！</a> </p><h2 id="方案二【个人推荐】"><a href="#方案二【个人推荐】" class="headerlink" title="方案二【个人推荐】"></a>方案二【个人推荐】</h2><p>使用Hexo插件APlayer！！！</p><h3 id="首先在-git-bash中使用命令"><a href="#首先在-git-bash中使用命令" class="headerlink" title="首先在 git bash中使用命令"></a>首先在 git bash中使用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br></pre></td></tr></table></figure><h3 id="使用leancloud"><a href="#使用leancloud" class="headerlink" title="使用leancloud"></a>使用leancloud</h3><p>lencloud可以完美解决图片与音乐外链问题。在leancloud官网注册后，可以选择个人用户开发版，这是免费的！然后在class中找到_File上传自己的音乐和图片，后面会有它的链接，直接copy就行。</p><h3 id="在md文件中具体添加音乐"><a href="#在md文件中具体添加音乐" class="headerlink" title="在md文件中具体添加音乐"></a>在md文件中具体添加音乐</h3><p>【添加一首歌】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">"岩石里的花"</span> <span class="string">"邓紫棋"</span> <span class="string">"http://192.168.127.151/cache/3/05/streamoc.music.tc.qq.com/f16436618361cfecc79153b3ba1db01a/M800101A9o5D1EWzyd.mp3?vkey=22981DFD3050B42FAB4296D2E56960739E671E4B24A1F2247633AF232692011F5FC6F16E87CF59F9A26E6DBD50592C9FCE4C15A033F29612&amp;guid=MS&amp;fromtag=8&amp;uin=0"</span> <span class="string">"http://lc-vslfihiq.cn-n1.lcfile.com/9facbadc02822c7cf86c.png"</span> <span class="string">"autoplay"</span> %&#125;</span><br></pre></td></tr></table></figure><p>【添加歌曲列表】<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;&#123;<span class="string">"narrow"</span>: <span class="literal">false</span>,<span class="string">"autoplay"</span>: <span class="literal">true</span>,<span class="string">"showlrc"</span>: 3,<span class="string">"mode"</span>: <span class="string">"random"</span>,<span class="string">"music"</span>: [</span><br><span class="line">&#123;<span class="string">"title"</span>: <span class="string">"岩石里的花"</span>,<span class="string">"author"</span>: <span class="string">"邓紫棋"</span>,<span class="string">"url"</span>: <span class="string">"http://192.168.127.151/cache/3/05/streamoc.music.tc.qq.com/f16436618361cfecc79153b3ba1db01a/M800101A9o5D1EWzyd.mp3?vkey=22981DFD3050B42FAB4296D2E56960739E671E4B24A1F2247633AF232692011F5FC6F16E87CF59F9A26E6DBD50592C9FCE4C15A033F29612&amp;guid=MS&amp;fromtag=8&amp;uin=0"</span>,<span class="string">"pic"</span>: <span class="string">"http://lc-vslfihiq.cn-n1.lcfile.com/9facbadc02822c7cf86c.png"</span>,<span class="string">"lrc"</span>: <span class="string">""</span>&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: <span class="string">"睡皇后"</span>,<span class="string">"author"</span>: <span class="string">"邓紫棋"</span>,<span class="string">"url"</span>: <span class="string">"http://lc-vslfihiq.cn-n1.lcfile.com/38e7079c52024b425a12.mp3"</span>,<span class="string">"pic"</span>: <span class="string">"http://lc-vslfihiq.cn-n1.lcfile.com/5910fa54d1d1eb90c1cf.png"</span>,<span class="string">"lrc"</span>: <span class="string">""</span>&#125;,</span><br><span class="line">&#123;<span class="string">"title"</span>: <span class="string">"倒数"</span>,<span class="string">"author"</span>: <span class="string">"邓紫棋"</span>,<span class="string">"url"</span>: <span class="string">"http://lc-vslfihiq.cn-n1.lcfile.com/ee98d8bf7cf6311dc37d.mp3"</span>,<span class="string">"pic"</span>: <span class="string">"http://lc-vslfihiq.cn-n1.lcfile.com/f48f7bc8811115acce16.jpg"</span>,<span class="string">"lrc"</span>: <span class="string">""</span>&#125;]&#125;&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure></p><p>效果如下：</p>        <div id="aplayer-IzlPDblk" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":true,"showlrc":3,"mode":"random","music":[{"title":"岩石里的花","author":"邓紫棋","url":"http://192.168.127.151/cache/3/05/streamoc.music.tc.qq.com/f16436618361cfecc79153b3ba1db01a/M800101A9o5D1EWzyd.mp3?vkey=22981DFD3050B42FAB4296D2E56960739E671E4B24A1F2247633AF232692011F5FC6F16E87CF59F9A26E6DBD50592C9FCE4C15A033F29612&guid=MS&fromtag=8&uin=0","pic":"http://lc-vslfihiq.cn-n1.lcfile.com/9facbadc02822c7cf86c.png","lrc":""},{"title":"睡皇后","author":"邓紫棋","url":"http://lc-vslfihiq.cn-n1.lcfile.com/38e7079c52024b425a12.mp3","pic":"http://lc-vslfihiq.cn-n1.lcfile.com/5910fa54d1d1eb90c1cf.png","lrc":""},{"title":"倒数","author":"邓紫棋","url":"http://lc-vslfihiq.cn-n1.lcfile.com/ee98d8bf7cf6311dc37d.mp3","pic":"http://lc-vslfihiq.cn-n1.lcfile.com/f48f7bc8811115acce16.jpg","lrc":""}]};  options.element = document.getElementById("aplayer-IzlPDblk");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【痴迷音乐】&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/02/22/2019.2.22/2019.2.22.jpg&quot; alt=&quot;为我GEM疯狂打call&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>身份证信息识别</title>
    <link href="http://yoursite.com/2019/01/17/2019.1.17/"/>
    <id>http://yoursite.com/2019/01/17/2019.1.17/</id>
    <published>2019-01-17T14:34:32.671Z</published>
    <updated>2019-04-13T08:00:40.858Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/2019/01/17/2019.1.17/1.png" alt="思路"><br>近几年来，模式识别理论以及图像处理技术的发展为利用光学图像实现的证件识别行业奠定了理论基础，而电子技术的发展带来低成本、小体积的摄像头在移动终端的普遍应用为快速、便捷、低成本的证件识别提供了技术平台。基于光学摄像头图像处理处理以及模式识别理论的光学字符识别（OCR）在社会生活的各个行业得到了广泛的应用。光学字符识别在文字的录入方面具有速度快、效率高、错误少、成本低等优势。在光学字符识别的基础上发展起来的证件识别作为一种新兴的技术也在社会生活的各个方面得到了应用。随着国家信息化建设的发展，身份证作为我国公民的重要身份凭证，其识别与管理也成为了国内大量学者关注的热点问题。随着网络技术和数据库技术的发展，身份证识别的结果可以大大方便公安机关的业务管理工作，如身份证真伪的识别、犯罪份子追踪等。基于图像处理技术和模式识别的身份证识别系统可以广泛应用于海关、酒店登记、机场、公民身份核查、流动人口管理、追缉罪犯等业务中，具有广阔的应用前景和现实意义。<br><a id="more"></a></p><h2 id="图像预处理"><a href="#图像预处理" class="headerlink" title="图像预处理"></a>图像预处理</h2><h3 id="灰度化"><a href="#灰度化" class="headerlink" title="灰度化"></a>灰度化</h3><p>身份证图像样本一般是通过扫描仪等设备获取到的彩色图像。由于彩色图像包含大量的颜色信息,在计算机处理时也会占用大量资源,降低了运行速度,而且实际采集的图像由于光照影响,使得整幅图偏暗或偏亮,没有灰度层次感。因此在对身份证图像进行识别时常将彩色图像转变为灰度图像,以加快处理速度,然后对其进行图像预处理。图片灰度化处理就是将指定图片每个像素点的RGB三个分量通过一定的方法计算出该像素点的灰度值，使图像只含亮度而不含色彩信息。通常灰度化采用的公式有两种：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Gray=(R+G+B)/3;</span><br><span class="line">Gray=0.299R+0.587G+0.114B;</span><br></pre></td></tr></table></figure></p><p>本项目使用的是第二种。</p><h3 id="二值化"><a href="#二值化" class="headerlink" title="二值化"></a>二值化</h3><p>经过非均匀校正和图像灰度化的身份证图像减小了非均匀光照和图像色彩对文字识别的影响。身份证上的信息主要为文字，文字的主要特征为结构特征。结构特征是独立与图像灰度的一种特征量，因此身份证图像还需要经过二值化处理。用二值的数字信号表示的字符图像灰度信号被称作字符图形数字信号二值化。灰度图像的二值化要求有效从图像中区分字符像素。传统印刷字体图像的二值化要求一方面要求尽量保持原始字符的结构特征，另一方面要求二值化后的字符之间不能有空白。传统印刷字符的背景比较单一且平滑，背景与字符之间可以利用简单的全局阈值的方法区分。而我国身份证由于背景存在纹理，并且存在持证人的照片，简单的全局阈值无法将包含身份信息的字符有效区分出来。因此需要考虑全局和局部阈值相结合的办法。<br><img src="/2019/01/17/2019.1.17/3.png" alt="二值化的身份证"></p><hr><h2 id="获得身份上各个区域"><a href="#获得身份上各个区域" class="headerlink" title="获得身份上各个区域"></a>获得身份上各个区域</h2><h3 id="字符区域"><a href="#字符区域" class="headerlink" title="字符区域"></a>字符区域</h3><p>二值图像即只有黑白两种颜色组成的图像，一般的白色为内容，黑色为背景。腐蚀是删除对象边界某些像素，既是让白色的区域瘦一圈；而膨胀则是给图像中的对象边界添加像素，即让白色的区域胖上一圈。而这个“圈”的大小，则是由参数来指定的。在本项目中的腐蚀膨胀这一步主要是将得到的二值图中的黑色块进行放大。即连接图片中相邻黑色像素点的元素。通过腐蚀可以把身份证上的身份证号码连接在一起形成一个矩形区域。然后进行轮廓提取，把每个大的区域找出来，除去小的区域，这样就可以定位得到身份证上各个的区域各部分的子图像。<br><img src="/2019/01/17/2019.1.17/4.png" alt="腐蚀化的身份证"></p><h3 id="图片区域"><a href="#图片区域" class="headerlink" title="图片区域"></a>图片区域</h3><p>上面获得子图像中并没有获得身份证上的大头照，本文使用基于AdaBoost算法实现的人脸识别来获得大头照。首先使用Harr-like特征表示人脸，使用“积分图”实现特征数值的快速计算；也就是在一个 20<em>20 的图片提取一些简单的特征（称为Harr特征）。<br><img src="/2019/01/17/2019.1.17/6.png" alt="Harr特征"><br>Harr特征的计算方法是将白色区域内的像素和减去黑色区域，因此在人脸与非人脸图片的相同位置上，值的大小是不一样的，这些特征可以用来区分人脸和分人脸。通过对矩形区域黑色和白色像素的计算可以识别出，前两个图为人脸，而最后一个图为非人脸。使用数千张切割好的人脸图片，和上万张背景图片作为训练样本。训练图片一般归一到 20</em>20 的大小。在这样大小的图片中，可供使用的 haar 特征数在 1 万个左右，使用AdaBoost算法挑选出一些最能代表人脸的矩形特征(弱分类器)，按照加权投票的方式将弱分类器构造为一个强分类器。将训练得到的若干强分类器串联组成一个级联结构的层叠分类器，级联结构能有效地提高分类器的检测速度。</p><hr><h2 id="身份证号码区域的数字提取"><a href="#身份证号码区域的数字提取" class="headerlink" title="身份证号码区域的数字提取"></a>身份证号码区域的数字提取</h2><p>身份证号码是由1-10（存在部分人群的身份证号码最后一位是X），从网上下载的到一个公开的数据，每个数字都有50张这样的图片，这些数据将用来训练。计算数字字符的特征向量，也即梯度分布特征+灰度分布部分训练数据得到一个1<em>72的特征向量，由calcGradientFeat函数实现。最后把训练矩阵和标签矩阵，保存到xml文件。在上面的步骤中已经获得身份证号码区域，分辨率缩放至300</em>20大小之后获得身份证号码区域的矩阵对象，然后用光照直方图处理身份证区域的图像，最后获得纯粹的字符矩阵。利用opencv自带的CvANN_MLP &amp;ann进行神经网模型的构建和训练。把训练矩阵和标签矩阵输入到构建的神经网络模型中，把经过神经网络模型后得到的字符特征向量分类得到由整数vector容易存储的矩阵，最后通过迭代器的方式输出容器对象的值。<br><img src="/2019/01/17/2019.1.17/12.png" alt="分类后的身份证号码区域"></p><hr><h2 id="身份证出生日期和性别区域的信息获取"><a href="#身份证出生日期和性别区域的信息获取" class="headerlink" title="身份证出生日期和性别区域的信息获取"></a>身份证出生日期和性别区域的信息获取</h2><p>从得到的身份证号码文本中进行编辑。根据下面的身份证号码特征进行划分和提取。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">15位身份证号码：第7、8位为出生年份(两位数)，第9、10位为出生月份，第11、12位代表出生日期，第15位代表性别，奇数为男，偶数为女。  </span><br><span class="line">18位身份证号码：第7、8、9、10位为出生年份(四位数)，第11、第12位为出生月份，第13、14位代表出生日期，第17位代表性别，奇数为男，偶数为女。</span><br></pre></td></tr></table></figure></p><hr><h2 id="调用百度OCR识别文字区域"><a href="#调用百度OCR识别文字区域" class="headerlink" title="调用百度OCR识别文字区域"></a>调用百度OCR识别文字区域</h2><p>在百度AI上获得API Key和Secret Key，通过API Key和Secret Key获取的access_token。对每个区域的照片进行base64编码，并去掉图片头，再通过urlencode变成一个字符串，最后发送请求。（每天可以免费500次）<br><img src="/2019/01/17/2019.1.17/14.png" alt="转换编码处理后的请求数据"></p><hr><h2 id="最终的是实验结果"><a href="#最终的是实验结果" class="headerlink" title="最终的是实验结果"></a>最终的是实验结果</h2><p><img src="/2019/01/17/2019.1.17/15.png" alt="实验结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2019/01/17/2019.1.17/1.png&quot; alt=&quot;思路&quot;&gt;&lt;br&gt;近几年来，模式识别理论以及图像处理技术的发展为利用光学图像实现的证件识别行业奠定了理论基础，而电子技术的发展带来低成本、小体积的摄像头在移动终端的普遍应用为快速、便捷、低成本的证件识别提供了技术平台。基于光学摄像头图像处理处理以及模式识别理论的光学字符识别（OCR）在社会生活的各个行业得到了广泛的应用。光学字符识别在文字的录入方面具有速度快、效率高、错误少、成本低等优势。在光学字符识别的基础上发展起来的证件识别作为一种新兴的技术也在社会生活的各个方面得到了应用。随着国家信息化建设的发展，身份证作为我国公民的重要身份凭证，其识别与管理也成为了国内大量学者关注的热点问题。随着网络技术和数据库技术的发展，身份证识别的结果可以大大方便公安机关的业务管理工作，如身份证真伪的识别、犯罪份子追踪等。基于图像处理技术和模式识别的身份证识别系统可以广泛应用于海关、酒店登记、机场、公民身份核查、流动人口管理、追缉罪犯等业务中，具有广阔的应用前景和现实意义。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Project" scheme="http://yoursite.com/tags/Project/"/>
    
  </entry>
  
  <entry>
    <title>Echarts的demo实现</title>
    <link href="http://yoursite.com/2019/01/15/2019.1.15.3/"/>
    <id>http://yoursite.com/2019/01/15/2019.1.15.3/</id>
    <published>2019-01-15T13:36:48.979Z</published>
    <updated>2019-04-13T08:00:50.699Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【一个简单的echarts-demo的实现】</p><div id="echarts4636" style="width: 85%;height: 400px;margin: 0 auto"></div><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts4636'));        // 指定图表的配置项和数据        var option = { tooltip : {        trigger: 'axis',        axisPointer : {            // 坐标轴指示器，坐标轴触发有效            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'        }    },    legend: {        data:['利润', '支出', '收入']    },    grid: {        left: '3%',        right: '4%',        bottom: '3%',        containLabel: true    },    xAxis : [        {            type : 'value'        }    ],    yAxis : [        {            type : 'category',            axisTick : {show: false},            data : ['周一','周二','周三','周四','周五','周六','周日']        }    ],    series : [        {            name:'利润',            type:'bar',            label: {                normal: {                    show: true,                    position: 'inside'                }            },            data:[200, 170, 240, 244, 200, 220, 210]        },        {            name:'收入',            type:'bar',            stack: '总量',            label: {                normal: {                    show: true                }            },            data:[320, 302, 341, 374, 390, 450, 420]        },        {            name:'支出',            type:'bar',            stack: '总量',            label: {                normal: {                    show: true,                    position: 'left'                }            },            data:[-120, -132, -101, -134, -190, -230, -210]        }    ]}        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><p>此图表是echarts的demo【google chrome浏览器会把echarts的脚本识别为不安全脚本，点击url栏最后的拦截脚本的安全盾，然后加载不安全脚本就可以看到效果图】<br>下面是echarts中的力导图的html实现<br> <a id="more"></a></p><hr><h2 id="为ECharts准备一个具备大小（宽高）的Dom"><a href="#为ECharts准备一个具备大小（宽高）的Dom" class="headerlink" title="为ECharts准备一个具备大小（宽高）的Dom"></a>为ECharts准备一个具备大小（宽高）的Dom</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"main"</span> style=<span class="string">"width: 600px;height:400px;"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="引入jquery"><a href="#引入jquery" class="headerlink" title="引入jquery"></a>引入jquery</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://ajax.microsoft.com/ajax/jquery/jquery-1.4.min.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="引入echarts-js"><a href="#引入echarts-js" class="headerlink" title="引入echarts.js"></a>引入echarts.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/echarts.js"</span>&gt;&lt;/script&gt;&lt;!-- echarts 新版本不支持force图，只能导入这个本地的（旧版）包--&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="在script标签中编写具体代码"><a href="#在script标签中编写具体代码" class="headerlink" title="在script标签中编写具体代码"></a>在script标签中编写具体代码</h2><h3 id="对require-config进行编写"><a href="#对require-config进行编写" class="headerlink" title="对require.config进行编写"></a>对require.config进行编写</h3><p>引入js文件夹，并命名为 echarts<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">require.config(&#123;</span><br><span class="line">paths: &#123;</span><br><span class="line">echarts: <span class="string">'js'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="对require进行编写"><a href="#对require进行编写" class="headerlink" title="对require进行编写"></a>对require进行编写</h3><h4 id="导入其他有用的模块（都在js文件夹下"><a href="#导入其他有用的模块（都在js文件夹下" class="headerlink" title="导入其他有用的模块（都在js文件夹下)"></a>导入其他有用的模块（都在js文件夹下)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">require(</span><br><span class="line">[</span><br><span class="line"><span class="string">'echarts'</span>,</span><br><span class="line"><span class="string">'echarts/chart/bar'</span>,</span><br><span class="line"><span class="string">'echarts/chart/line'</span>,</span><br><span class="line"><span class="string">'echarts/chart/map'</span>,</span><br><span class="line"><span class="string">'echarts/chart/force'</span>,</span><br><span class="line"><span class="string">'echarts/chart/chord'</span></span><br><span class="line">],</span><br><span class="line">......//这里省略的代码在下面步骤</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="编辑图表代码（附上全部代码，具体修改见fuction）"><a href="#编辑图表代码（附上全部代码，具体修改见fuction）" class="headerlink" title="编辑图表代码（附上全部代码，具体修改见fuction）"></a>编辑图表代码（附上全部代码，具体修改见fuction）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;ECharts&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;P&gt;SDGYASDGSAJD ASDAS &lt;/P&gt;</span><br><span class="line">    &lt;!-- 1 为ECharts准备一个具备大小（宽高）的Dom --&gt;</span><br><span class="line">    &lt;div id=<span class="string">"main"</span> style=<span class="string">"width: 600px;height:400px;"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!-- 2 引入jquery（要在echarts.js前面 --&gt;</span><br><span class="line">    &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://ajax.microsoft.com/ajax/jquery/jquery-1.4.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- 3 引入echarts.js--&gt;</span><br><span class="line">&lt;script src=<span class="string">"js/echarts.js"</span>&gt;&lt;/script&gt;&lt;!-- echarts 新版本不支持force图，只能导入这个本地的（旧版）包--&gt;</span><br><span class="line">    &lt;!--&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://echarts.baidu.com/gallery/vendors/echarts/echarts.min.js"</span>&gt;&lt;/script&gt;--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- step4 编写js--&gt;</span><br><span class="line">&lt;!--在这里引入主题文件--&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">&lt;!-- step4-1 引入js文件夹，并命名为 echarts--&gt;</span><br><span class="line">require.config(&#123;</span><br><span class="line">paths: &#123;</span><br><span class="line">echarts: <span class="string">'js'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&lt;!-- step4-2 将代码写在require里面--&gt;</span><br><span class="line">require(</span><br><span class="line">&lt;!-- step4-2-1 导入其他有用的模块（都在js文件夹下）--&gt;</span><br><span class="line">[</span><br><span class="line"><span class="string">'echarts'</span>,</span><br><span class="line"><span class="string">'echarts/chart/bar'</span>,</span><br><span class="line"><span class="string">'echarts/chart/line'</span>,</span><br><span class="line"><span class="string">'echarts/chart/map'</span>,</span><br><span class="line"><span class="string">'echarts/chart/force'</span>,</span><br><span class="line"><span class="string">'echarts/chart/chord'</span></span><br><span class="line">],</span><br><span class="line">&lt;!-- step4-2-2 编辑图表代码--&gt;</span><br><span class="line"><span class="keyword">function</span> (ec) &#123;</span><br><span class="line">&lt;!--step4-2-2-1 设置数据--&gt;</span><br><span class="line">var option=&#123;</span><br><span class="line">//------------------------------------------</span><br><span class="line">//此处以下是在官网上调试好的数据代码</span><br><span class="line">title : &#123;</span><br><span class="line">text: <span class="string">'标题'</span>,</span><br><span class="line">subtext: <span class="string">'副标题'</span>,</span><br><span class="line">x:<span class="string">'right'</span>,</span><br><span class="line">y:<span class="string">'bottom'</span></span><br><span class="line">&#125;,</span><br><span class="line">tooltip : &#123;</span><br><span class="line">trigger: <span class="string">'item'</span>,</span><br><span class="line">formatter: <span class="string">'&#123;a&#125; : &#123;b&#125;'</span></span><br><span class="line">&#125;,</span><br><span class="line">toolbox: &#123;</span><br><span class="line">show : <span class="literal">true</span>,</span><br><span class="line">feature : &#123;</span><br><span class="line">restore : &#123;show: <span class="literal">true</span>&#125;,</span><br><span class="line">magicType: &#123;show: <span class="literal">true</span>, <span class="built_in">type</span>: [<span class="string">'force'</span>, <span class="string">'chord'</span>]&#125;,</span><br><span class="line">saveAsImage : &#123;show: <span class="literal">true</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">legend: &#123;</span><br><span class="line">x: <span class="string">'left'</span>,</span><br><span class="line">data:[<span class="string">'家人'</span>,<span class="string">'朋友'</span>]</span><br><span class="line">&#125;,</span><br><span class="line">series : [</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">type</span>:<span class="string">'force'</span>,</span><br><span class="line">name : <span class="string">"人物关系"</span>,</span><br><span class="line">ribbonType: <span class="literal">false</span>,</span><br><span class="line">categories : [</span><br><span class="line">&#123;</span><br><span class="line">name: <span class="string">'人物'</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">name: <span class="string">'家人'</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">name:<span class="string">'朋友'</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">itemStyle: &#123;</span><br><span class="line">normal: &#123;</span><br><span class="line">label: &#123;</span><br><span class="line">show: <span class="literal">true</span>,</span><br><span class="line">textStyle: &#123;</span><br><span class="line">color: <span class="string">'#333'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">nodeStyle : &#123;</span><br><span class="line">brushType : <span class="string">'both'</span>,</span><br><span class="line">borderColor : <span class="string">'rgba(255,215,0,0.4)'</span>,</span><br><span class="line">borderWidth : 1</span><br><span class="line">&#125;,</span><br><span class="line">linkStyle: &#123;</span><br><span class="line"><span class="built_in">type</span>: <span class="string">'curve'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">emphasis: &#123;</span><br><span class="line">label: &#123;</span><br><span class="line">show: <span class="literal">false</span></span><br><span class="line">// textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE</span><br><span class="line">&#125;,</span><br><span class="line">nodeStyle : &#123;</span><br><span class="line">//r: 30</span><br><span class="line">&#125;,</span><br><span class="line">linkStyle : &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">useWorker: <span class="literal">false</span>,</span><br><span class="line">minRadius : 15,</span><br><span class="line">maxRadius : 25,</span><br><span class="line">gravity: 1.1,</span><br><span class="line">scaling: 1.1,</span><br><span class="line">roam: <span class="string">'move'</span>,</span><br><span class="line">nodes:[</span><br><span class="line">&#123;category:0, name: <span class="string">'乔布斯'</span>, value : 10, label: <span class="string">'乔布斯\n（主要）'</span>&#125;,</span><br><span class="line">&#123;category:1, name: <span class="string">'丽萨-乔布斯'</span>,value : 2&#125;,</span><br><span class="line">&#123;category:1, name: <span class="string">'保罗-乔布斯'</span>,value : 3&#125;,</span><br><span class="line">&#123;category:1, name: <span class="string">'克拉拉-乔布斯'</span>,value : 3&#125;,</span><br><span class="line">&#123;category:1, name: <span class="string">'劳伦-鲍威尔'</span>,value : 7&#125;,</span><br><span class="line">&#123;category:2, name: <span class="string">'史蒂夫-沃兹尼艾克'</span>,value : 5&#125;,</span><br><span class="line">&#123;category:2, name: <span class="string">'奥巴马'</span>,value : 8&#125;,</span><br><span class="line">&#123;category:2, name: <span class="string">'比尔-盖茨'</span>,value : 9&#125;,</span><br><span class="line">&#123;category:2, name: <span class="string">'乔纳森-艾夫'</span>,value : 4&#125;,</span><br><span class="line">&#123;category:2, name: <span class="string">'蒂姆-库克'</span>,value : 4&#125;,</span><br><span class="line">&#123;category:2, name: <span class="string">'龙-韦恩'</span>,value : 1&#125;,</span><br><span class="line">],</span><br><span class="line">links : [</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'丽萨-乔布斯'</span>, target : <span class="string">'乔布斯'</span>, weight : 1, name: <span class="string">'女儿'</span>&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'保罗-乔布斯'</span>, target : <span class="string">'乔布斯'</span>, weight : 2, name: <span class="string">'父亲'</span>&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'克拉拉-乔布斯'</span>, target : <span class="string">'乔布斯'</span>, weight : 1, name: <span class="string">'母亲'</span>&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'劳伦-鲍威尔'</span>, target : <span class="string">'乔布斯'</span>, weight : 2&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'史蒂夫-沃兹尼艾克'</span>, target : <span class="string">'乔布斯'</span>, weight : 3, name: <span class="string">'合伙人'</span>&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'奥巴马'</span>, target : <span class="string">'乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'比尔-盖茨'</span>, target : <span class="string">'乔布斯'</span>, weight : 6, name: <span class="string">'竞争对手'</span>&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'乔纳森-艾夫'</span>, target : <span class="string">'乔布斯'</span>, weight : 1, name: <span class="string">'爱将'</span>&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'蒂姆-库克'</span>, target : <span class="string">'乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'龙-韦恩'</span>, target : <span class="string">'乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'克拉拉-乔布斯'</span>, target : <span class="string">'保罗-乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'奥巴马'</span>, target : <span class="string">'保罗-乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'奥巴马'</span>, target : <span class="string">'克拉拉-乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'奥巴马'</span>, target : <span class="string">'劳伦-鲍威尔'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'奥巴马'</span>, target : <span class="string">'史蒂夫-沃兹尼艾克'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'比尔-盖茨'</span>, target : <span class="string">'奥巴马'</span>, weight : 6&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'比尔-盖茨'</span>, target : <span class="string">'克拉拉-乔布斯'</span>, weight : 1&#125;,</span><br><span class="line">&#123;<span class="built_in">source</span> : <span class="string">'蒂姆-库克'</span>, target : <span class="string">'奥巴马'</span>, weight : 1&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">//此处以上是官网上调试好的数据代码</span><br><span class="line">//------------------------------------------</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!--step4-2-2-2 初始化echarts，并且引入主题<span class="string">'chalk'</span>--&gt;</span><br><span class="line">var myChart2 = ec.init(document.getElementById(<span class="string">'main'</span>),<span class="string">'chalk'</span>); //,<span class="string">'macarons'</span>主题</span><br><span class="line">&lt;!--step4-2-2-3 为myChart设置数据--&gt;</span><br><span class="line">myChart2.setOption(option);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【一个简单的echarts-demo的实现】&lt;/p&gt;
&lt;div id=&quot;echarts4636&quot; style=&quot;width: 85%;height: 400px;margin: 0 auto&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById(&#39;echarts4636&#39;));

        // 指定图表的配置项和数据
        var option = {
	 tooltip : {
        trigger: &#39;axis&#39;,
        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
            type : &#39;shadow&#39;        // 默认为直线，可选为：&#39;line&#39; | &#39;shadow&#39;
        }
    },
    legend: {
        data:[&#39;利润&#39;, &#39;支出&#39;, &#39;收入&#39;]
    },
    grid: {
        left: &#39;3%&#39;,
        right: &#39;4%&#39;,
        bottom: &#39;3%&#39;,
        containLabel: true
    },
    xAxis : [
        {
            type : &#39;value&#39;
        }
    ],
    yAxis : [
        {
            type : &#39;category&#39;,
            axisTick : {show: false},
            data : [&#39;周一&#39;,&#39;周二&#39;,&#39;周三&#39;,&#39;周四&#39;,&#39;周五&#39;,&#39;周六&#39;,&#39;周日&#39;]
        }
    ],
    series : [
        {
            name:&#39;利润&#39;,
            type:&#39;bar&#39;,
            label: {
                normal: {
                    show: true,
                    position: &#39;inside&#39;
                }
            },
            data:[200, 170, 240, 244, 200, 220, 210]
        },
        {
            name:&#39;收入&#39;,
            type:&#39;bar&#39;,
            stack: &#39;总量&#39;,
            label: {
                normal: {
                    show: true
                }
            },
            data:[320, 302, 341, 374, 390, 450, 420]
        },
        {
            name:&#39;支出&#39;,
            type:&#39;bar&#39;,
            stack: &#39;总量&#39;,
            label: {
                normal: {
                    show: true,
                    position: &#39;left&#39;
                }
            },
            data:[-120, -132, -101, -134, -190, -230, -210]
        }
    ]
}

        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
&lt;/script&gt;
&lt;p&gt;此图表是echarts的demo【google chrome浏览器会把echarts的脚本识别为不安全脚本，点击url栏最后的拦截脚本的安全盾，然后加载不安全脚本就可以看到效果图】&lt;br&gt;下面是echarts中的力导图的html实现&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Echarts" scheme="http://yoursite.com/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title>Index日常工作</title>
    <link href="http://yoursite.com/2019/01/15/2019.1.15.2/"/>
    <id>http://yoursite.com/2019/01/15/2019.1.15.2/</id>
    <published>2019-01-15T07:35:05.615Z</published>
    <updated>2019-04-13T08:00:54.538Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【持续补充】<br><img src="/2019/01/15/2019.1.15.2/1.jpg" alt="sun"><br><a id="more"></a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="0" height="0" src="http://streamoc.music.tc.qq.com/M800101A9o5D1EWzyd.mp3?vkey=496F425FDC1F092E0924D5ADD6BA7AA6837C8528BF0696B09AE2DC0FCB8B1CCDCFBFABB6C0EDC11B17B69138025492940BF54F6EA14B310A&guid=MS&fromtag=8&uin=0"></iframe><h2 id="WORK"><a href="#WORK" class="headerlink" title="WORK"></a>WORK</h2><h3 id="周报的制作"><a href="#周报的制作" class="headerlink" title="周报的制作"></a>周报的制作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">登录到网页http://www.idxcheck.shippingex.cn/f/index</span><br><span class="line">修改期数和日期  </span><br><span class="line">检查权重有无变化 </span><br><span class="line">报价详情（主要是异常数据的处理） </span><br><span class="line">异常报价的记录 </span><br><span class="line">网站监控情况（重点)把该周系统发生的问题和解决方案记录下来。 </span><br><span class="line">数据备份情况（一般一次只改变那十几个表，check一下这周数据表修改多少次）</span><br><span class="line">每周四周五开始指数报价，周末开始制作，周日下午完成。完成后发送到航交所的邮箱</span><br></pre></td></tr></table></figure><h3 id="系统框架"><a href="#系统框架" class="headerlink" title="系统框架"></a>系统框架</h3><p>首先是对那两个demo系统的基本理解，使用的框架是开源的AdminLTE。</p><p>主要思想是利用这个框架的容器放入各个做好的数据可视化页面</p><p>数据可视化主要用的是<a href="https://echarts.baidu.com/" target="_blank" rel="noopener">echarts</a>，<a href="https://www.highcharts.com/" target="_blank" rel="noopener">highcharts</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echarts： https://echarts.baidu.com/</span><br><span class="line">highcharts：https://www.highcharts.com/</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【持续补充】&lt;br&gt;&lt;img src=&quot;/2019/01/15/2019.1.15.2/1.jpg&quot; alt=&quot;sun&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="index" scheme="http://yoursite.com/tags/index/"/>
    
  </entry>
  
  <entry>
    <title>美剧资源转到百度云</title>
    <link href="http://yoursite.com/2019/01/15/2019.1.15/"/>
    <id>http://yoursite.com/2019/01/15/2019.1.15/</id>
    <published>2019-01-15T06:39:37.000Z</published>
    <updated>2019-04-13T08:00:44.514Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【解决我姐的真实需求】<br><img src="/2019/01/15/2019.1.15/gem.jpg" alt="我lay了"><br>现在很多人在手机上看剧，但是美剧的资源又少，不想到搜狐等网站等待广告时间，本文做的就是一个把资源转到你的百度云盘中，然后直接使用云播放就可以观看，省略中间的下载时间。<br> <a id="more"></a></p><p>在<a href="http://www.yuanlai521.com" target="_blank" rel="noopener">http://www.yuanlai521.com </a> 找到想看的美剧,可以看到全部集数的迅雷下载链接</p><h3 id="运行美剧-py"><a href="#运行美剧-py" class="headerlink" title="运行美剧.py"></a>运行美剧.py</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from lxml import etree</span><br><span class="line">def get_html():</span><br><span class="line">url_list=[</span><br><span class="line">        <span class="string">"http://www.yuanlai521.com/meijuxiazai/281/"</span>,</span><br><span class="line">        <span class="string">"http://www.yuanlai521.com/meijuxiazai/283/"</span>,</span><br><span class="line">        <span class="string">"http://www.yuanlai521.com/meijuxiazai/285/"</span>,</span><br><span class="line">        <span class="string">"http://www.yuanlai521.com/meijuxiazai/288/"</span>,</span><br><span class="line">        <span class="string">"http://www.yuanlai521.com/meijuxiazai/20899/"</span></span><br><span class="line">    ]</span><br><span class="line">    headers=&#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> uu <span class="keyword">in</span> url_list:</span><br><span class="line">        response=requests.get(url=uu, headers=headers)</span><br><span class="line">        html=response.content</span><br><span class="line">        <span class="comment">#print (html)</span></span><br><span class="line">        html1 = etree.HTML(html)</span><br><span class="line">        html_data = html1.xpath(<span class="string">'//*[@id="entry"]/p[3]/a/@href'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> html_data:</span><br><span class="line">        <span class="built_in">print</span> (i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">get_html()</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|越狱.Prison.Break.S01E01.Chi_Eng.BDrip.AC3.1024X576.x264-YYeTs人人影视.mkv|519649293|C4CC96A796EC009C756E1553AEC1A088|h=UL744MYQIKKEI4267WY6PRMOWGM5RETM|/ </span><br><span class="line">ed2k://|file|越狱.Prison.Break.S01E02.Chi_Eng.BDrip.AC3.1024X576.x264-YYeTs人人影视.mkv|525195861|B14976E29C60B5CFE6D51E102243781C|h=ZMCQGK4NIGWQUIYADW5PSY3WEZNAJN7D|/ </span><br><span class="line">ed2k://|file|越狱.Prison.Break.S01E03.Chi_Eng.BDrip.AC3.1024X576.x264-YYeTs人人影视.mkv|523167987|1F941CCA8B2A5BF06427F762D555240B|h=O4RF6F5LU4TWJXO5T2TCZMKURUL3HWO2|/ </span><br><span class="line">......</span><br></pre></td></tr></table></figure><h3 id="百度网盘上的操作"><a href="#百度网盘上的操作" class="headerlink" title="百度网盘上的操作"></a>百度网盘上的操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">copy链接</span><br><span class="line">在百度云网盘新建一个文件夹保存，以免混乱</span><br><span class="line">点击离线下载——&gt;新建普通任务——&gt;copy链接，保存到刚建的文件夹</span><br><span class="line">下载，刷新（1秒就可以看到你的百度云中已经有你想看的美剧）</span><br><span class="line">之后你就可以百度网盘在线观看。</span><br></pre></td></tr></table></figure><p>温馨提醒：本文仅从适用于在人人视频上找不到的美剧或者在各大视频网站中需要付费观看的美剧</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【解决我姐的真实需求】&lt;br&gt;&lt;img src=&quot;/2019/01/15/2019.1.15/gem.jpg&quot; alt=&quot;我lay了&quot;&gt;&lt;br&gt;现在很多人在手机上看剧，但是美剧的资源又少，不想到搜狐等网站等待广告时间，本文做的就是一个把资源转到你的百度云盘中，然后直接使用云播放就可以观看，省略中间的下载时间。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="LIFE" scheme="http://yoursite.com/tags/LIFE/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/14/hello-world/"/>
    <id>http://yoursite.com/2019/01/14/hello-world/</id>
    <published>2019-01-14T15:15:37.318Z</published>
    <updated>2019-04-13T08:00:24.527Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="【hello-world是入门必备，每次都没有删，这次也不例外】"><a href="#【hello-world是入门必备，每次都没有删，这次也不例外】" class="headerlink" title="【hello world是入门必备，每次都没有删，这次也不例外】"></a>【hello world是入门必备，每次都没有删，这次也不例外】</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br> <a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;【hello-world是入门必备，每次都没有删，这次也不例外】&quot;&gt;&lt;a href=&quot;#【hello-world是入门必备，每次都没有删，这次也不例外】&quot; class=&quot;headerlink&quot; title=&quot;【hello world是入门必备，每次都没有删，这次也不例外】&quot;&gt;&lt;/a&gt;【hello world是入门必备，每次都没有删，这次也不例外】&lt;/h2&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
